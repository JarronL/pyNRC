pyNRC Paper Outline

Introduction
    - pyNRC is a set of Python-based tools for planning observations with JWST NIRCam
    - includes an ETC, a simple slope slope simulator, and raw data simulator
    - highlights features for coronagraphy for high contrast imaging, but can handle wide field imaging and grism spectroscopy
        - predict contrast performance of the coronagraphs
        - optimize detection algorithms for imaging of extrasolar planets
        - test our ability to accurately spectral information of exoplanet atmospheres and debris disk constituents
    - uses WebbPSF to simulate realistic PSFs
        - handles WFE variations through spatial and temporal alterations of the OPD map
    - includes detailed detector simulator to handle systematic uncertainties of data processing
    - mention other NIRCam simulators and their features
        - Guitarra
        - The ETC (pandeia)
        - STIPS (or whatever it's called these days)
        - PHOSIM

Creating Realistic PSFs
    - Wavelength-dependent PSFs calculate using WebbPSF
        - do not store grid of monochromatic PSFs
        - perform high-order polynomial fit to PSFs and store coefficients in a FITS file
        - PSFs generated with coefficients over a filter bandpass show negligible difference to those directly from WebbPSF
    - Procedure allows for quick PSF generation of arbitrary input spectrum
    - Field-dependent WFE values
        - modifies coefficients based on field position
    - Temporal WFE drift values
        - useful for observations with a coronagraphic sequence (Roll1, Roll2, Reference) 
    - 

Program Structure
    - Detector class (also stores multiaccum setup)
        - holds info on detector noise performance and desired operations
    - ngNRC
        - NIRCam noise generator
    - NIRCam instrument class
        - holds info on instrument setup 
        - Zodiacal bg emission (will use JWST Backgrounds if installed)
        - calculate saturation limits and sensitivities for a given NIRCam configuration
        - determine optimum ramp configuration to maximize sensitivities
        - simulate PSF images
        - simulate ramp exposures from ideal slope images

